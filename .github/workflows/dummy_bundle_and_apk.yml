name: Generate dummy bundle and APK

# This workflow will trigger when the 'dummy_bundle_and_apk' is pushed.
on:
  push:
    tags:
      - 'dummy_bundle_and_apk' # dummy_bundle_and_apk Tag.

jobs:
  publish_dummy_bundle_and_apk:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27d
          link-to-sdk: true

      - name: Preparing signing material
        env:
          KEYSTORE: ${{ secrets.keystore }}
        run: |
          echo "$KEYSTORE" | base64 -d > kiwix-android.keystore
          
      - name: Retrieve date from git revision
        id: git_head_revision_date
        run: |
          DATE=$(git log -1 --format=%cd --date=format:%Y-%m-%d)
          echo "KIWIX_ANDROID_RELEASE_DATE=$DATE" >> $GITHUB_ENV
        shell: bash

      - name: Generate dummy Bundle
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KIWIX_ANDROID_RELEASE_DATE: ${{ env.KIWIX_ANDROID_RELEASE_DATE }}
        run: |
          ./gradlew bundlePlayStore --scan

      - name: Generate dummy APKs
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KIWIX_ANDROID_RELEASE_DATE: ${{ env.KIWIX_ANDROID_RELEASE_DATE }}
          APK_BUILD: "true"
        run: |
          ./gradlew assembleRelease --scan


      - name: Get Bundle and APKs name and path
        id: get-bundle-and-apk-paths
        run: |
          BUNDLE_PATH="app/build/outputs/bundle/playStore/kiwix-playStore.aab"
          BUNDLE_NAME="PlayStoreDummyBundle.aab"
          echo "bundle_path=$BUNDLE_PATH" >> $GITHUB_ENV
          echo "bundle_name=$BUNDLE_NAME" >> $GITHUB_ENV
          APK_DIR="app/build/outputs/apk/release/"
          echo "apk_dir=$APK_DIR" >> $GITHUB_ENV

      - name: Upload Bundle as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.bundle_name }}
          path: ${{ env.bundle_path }}

      - name: Upload All Release APKs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ReleaseApks
          path: ${{ env.apk_dir }}*.apk

